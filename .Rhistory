library(tidyverse)
space_dogs_raw <- read_csv("data/Dogs-Database.csv")
space_dogs_raw
# Vous n'aurez besoin que de la bibliothèque tidyverse pour cet exercice
library(tidyverse)
space_dogs_raw <- read_csv("data/Dogs-Database.csv")
space_dogs <- space_dogs_raw %>%
# La colonne Fate semble indiquer soit "Survived" ou "Dead <DATE>", donc nous faisons
# une nouvelle version binaire de la colonne Fate qui est "Survived" si le chien
# a survécu et "Died" sinon
mutate(Fate_binary = ifelse(Fate == "Survived", "Survived", "Died")) %>%
# Les données répertorient les dates de chaque vol, séparées par une virgule. Pour les convertir
# en nombre, on utilise une petite astuce : compter le nombre de virgules dans la
# cellule et ajoutez 1 (s'il y avait 2 vols, il y aurait 1 virgule, etc.)
mutate(Flights_num = str_count(Flights, ",") + 1)
space_dogs
space_dogs
# On résume les données par fate et gender
space_dogs_summarized <- space_dogs %>%
group_by(Fate_binary, Gender) %>%
summarize(total_dogs = n(),
total_flights = sum(Flights_num))
space_dogs_summarized
ugly_plot <- ggplot(data = space_dogs_summarized,
mapping = aes(x = Fate_binary, y = total_flights, color = Gender)) +
geom_pointrange(aes(ymin = 0, ymax = total_flights), size = 2,
position = position_dodge(width = 0.5))
ugly_plot
ugly_plot <- ggplot(data = space_dogs_summarized,
mapping = aes(x = Fate_binary, y = total_flights, color = Gender)) +
geom_histogram()
ugly_plot
ugly_plot <- ggplot(data = space_dogs_summarized,
mapping = aes(x = Fate_binary, y = total_flights, color = Gender)) +
geom_pointrange()
ugly_plot
ugly_plot <- ggplot(data = space_dogs_summarized,
mapping = aes(x = Fate_binary, y = total_flights, color = Gender)) +
geom_point()
ugly_plot
ugly_plot <- ggplot(data = space_dogs_summarized,
mapping = aes(x = Fate_binary, y = total_flights, color = Gender)) +
geom_pointrange(aes(ymin = 0, ymax = total_flights), size = 2,
position = position_dodge(width = 0.5))
ugly_plot
ugly_plot <- ggplot(data = space_dogs_summarized,
mapping = aes(x = Fate_binary, y = total_flights, color = Gender)) +
geom_point()
ugly_plot
ugly_plot <- ggplot(data = space_dogs_summarized,
mapping = aes(x = Fate_binary, y = total_flights, color = Gender)) +
geom_boxplot()
ugly_plot
ugly_plot <- ggplot(data = space_dogs_summarized,
mapping = aes(x = Fate_binary, y = total_flights, color = Gender)) +
geom_histogram()
ugly_plot
ugly_plot <- ggplot(data = space_dogs_summarized,
mapping = aes(x = Fate_binary, y = total_flights, color = Gender)) +
geom_boxplot()
ugly_plot
ugly_plot <- ggplot(data = space_dogs_summarized,
mapping = aes(x = Fate_binary, y = total_flights, color = Gender)) +
geom_path()
ugly_plot
ugly_plot <- ggplot(data = space_dogs_summarized,
mapping = aes(x = Fate_binary, y = total_flights, color = Gender)) +
geom_path()
ugly_plot()
ugly_plot <- ggplot(data = space_dogs_summarized,
mapping = aes(x = Fate_binary, y = total_flights, color = Gender)) +
geom_bar()
ugly_plot
ugly_plot <- ggplot(data = space_dogs_summarized,
mapping = aes(x = Fate_binary, y = total_flights, color = Gender)) +
geom_pointrange(aes(ymin = 0, ymax = total_flights), size = 2,
position = position_dodge(width = 0.5))
ugly_plot
ugly_plot <- ggplot(data = space_dogs_summarized,
mapping = aes(x = Fate_binary, y = total_flights, color = Gender)) +
geom_pointrange()
ugly_plot
ugly_plot <- ggplot(data = space_dogs_summarized,
mapping = aes(x = Fate_binary, y = total_flights, color = Gender)) +
geom_col()
ugly_plot
ugly_plot <- ggplot(data = space_dogs_summarized,
mapping = aes(x = Fate_binary, y = total_flights)) +
geom_col()
ugly_plot
ugly_plot <- ggplot(data = space_dogs_summarized,
mapping = aes(x = Fate_binary, y = total_flights, color = Gender)) +
geom_col()+
theme_minimal() +
theme(
# Utilisez des couleurs vives et discordantes
plot.background = element_rect(fill = "pink"),
panel.background = element_rect(fill = "orange"),
axis.text.x = element_text(color = "red", size = 15, angle = 45, hjust = 1),
axis.text.y = element_text(color = "green", size = 15),
axis.title = element_text(color = "blue", size = 20),
legend.text = element_text(color = "purple", size = 12),
# Utilisez une police de caractères inhabituelle
text = element_text(family = "Comic Sans MS"))
ugly_plot
ugly_plot <- ggplot(data = space_dogs_summarized,
mapping = aes(x = Fate_binary, y = total_flights, color = Gender)) +
geom_col()+
theme_minimal() +
theme(
# Utilisez des couleurs vives et discordantes
plot.background = element_rect(fill = "pink"),
panel.background = element_rect(fill = "orange"),
axis.text.x = element_text(color = "red", size = 15, angle = 45, hjust = 1),
axis.text.y = element_text(color = "green", size = 15),
axis.title = element_text(color = "blue", size = 20),
legend.text = element_text(color = "purple", size = 12))
ugly_plot
ugly_plot <- ggplot(data = space_dogs_summarized,
mapping = aes(x = Fate_binary, y = total_flights, color = Gender)) +
geom_col()+
theme_minimal() +
theme(
plot.background = element_rect(fill = "pink"),
panel.background = element_rect(fill = "orange"),
axis.text.x = element_text(color = "red", size = 15, angle = 45, hjust = 1),
axis.text.y = element_text(color = "green", size = 15),
axis.title = element_text(color = "blue", size = 20),
legend.text = element_text(color = "purple", size = 12))
ugly_plot
ugly_plot <- ggplot(data = space_dogs_summarized,
mapping = aes(x = Fate_binary, y = total_flights, color = Gender)) +
geom_col()+
geom_text(
label=label1,
nudge_x=0.45, nudge_y=0.1,
check_overlap=T)+
theme_minimal() +
theme(
plot.background = element_rect(fill = "pink"),
panel.background = element_rect(fill = "orange"),
axis.text.x = element_text(color = "red", size = 15, angle = 45, hjust = 1),
axis.text.y = element_text(color = "green", size = 15),
axis.title = element_text(color = "blue", size = 20),
legend.text = element_text(color = "purple", size = 12))
ugly_plot <- ggplot(data = space_dogs_summarized,
mapping = aes(x = Fate_binary, y = total_flights, color = Gender)) +
geom_col()+
theme_minimal() +
theme(
plot.background = element_rect(fill = "pink"),
panel.background = element_rect(fill = "orange"),
axis.text.x = element_text(color = "red", size = 15, angle = 45, hjust = 1),
axis.text.y = element_text(color = "green", size = 15),
axis.title = element_text(color = "blue", size = 20),
legend.text = element_text(color = "purple", size = 12))
ugly_plot
ugly_plot <- ggplot(data = space_dogs_summarized,
mapping = aes(x = Fate_binary, y = total_flights, color = Gender)) +
geom_col()+
theme_minimal() +
theme(
plot.background = element_rect(fill = "blue"),
panel.background = element_rect(fill = "orange"),
axis.text.x = element_text(color = "red", size = 15, angle = 45, hjust = 1),
axis.text.y = element_text(color = "green", size = 15),
axis.title = element_text(color = "blue", size = 20),
legend.text = element_text(color = "purple", size = 12))
ugly_plot
ugly_plot <- ggplot(data = space_dogs_summarized,
mapping = aes(x = Fate_binary, y = total_flights, color = Gender)) +
geom_col()+
theme_minimal() +
theme(
plot.background = element_rect(fill = "blue"),
panel.background = element_rect(fill = "red"),
axis.text.x = element_text(color = "red", size = 15, angle = 45, hjust = 1),
axis.text.y = element_text(color = "green", size = 15),
axis.title = element_text(color = "blue", size = 20),
legend.text = element_text(color = "purple", size = 12))
ugly_plot
ugly_plot <- ggplot(data = space_dogs_summarized,
mapping = aes(x = Fate_binary, y = total_flights, color = Gender)) +
geom_col()+
theme_minimal() +
theme(
plot.background = element_rect(fill = "blue"),
panel.background = element_rect(fill = "red"),
axis.text.x = element_text(color = "white", size = 15, angle = 45, hjust = 1),
axis.text.y = element_text(color = "green", size = 15),
axis.title = element_text(color = "blue", size = 20),
legend.text = element_text(color = "purple", size = 12))
ugly_plot
ugly_plot <- ggplot(data = space_dogs_summarized,
mapping = aes(x = Fate_binary, y = total_flights, color = Gender)) +
geom_col()+
theme_minimal() +
theme(
plot.background = element_rect(fill = "blue"),
panel.background = element_rect(fill = "red"),
axis.text.x = element_text(color = "white", size = 50, angle = 45, hjust = 1),
axis.text.y = element_text(color = "green", size = 15),
axis.title = element_text(color = "blue", size = 20),
legend.text = element_text(color = "purple", size = 12))
ugly_plot
ugly_plot <- ggplot(data = space_dogs_summarized,
mapping = aes(x = Fate_binary, y = total_flights, color = Gender)) +
geom_col()+
theme_minimal() +
theme(
plot.background = element_rect(fill = "blue"),
panel.background = element_rect(fill = "red"),
axis.text.x = element_text(color = "white", size = 4, angle = 45, hjust = 1),
axis.text.y = element_text(color = "green", size = 15),
axis.title = element_text(color = "blue", size = 20),
legend.text = element_text(color = "purple", size = 12))
ugly_plot
ugly_plot <- ggplot(data = space_dogs_summarized,
mapping = aes(x = Fate_binary, y = total_flights, color = Gender)) +
geom_col()+
theme_minimal() +
theme(
plot.background = element_rect(fill = "blue"),
panel.background = element_rect(fill = "red"),
axis.text.x = element_text(color = "white", size = 4),
axis.text.y = element_text(color = "green", size = 15),
axis.title = element_text(color = "blue", size = 20),
legend.text = element_text(color = "purple", size = 12))
ugly_plot
ugly_plot <- ggplot(data = space_dogs_summarized,
mapping = aes(x = Fate_binary, y = total_flights, color = Gender)) +
geom_col()+
theme_minimal() +
theme(
plot.background = element_rect(fill = "blue"),
panel.background = element_rect(fill = "red"),
axis.text.x = element_text(color = "white", size = 4),
axis.text.y = element_text(color = "green", size = 15),
axis.title = element_text(color = "black", size = 5),
legend.text = element_text(color = "purple", size = 12))
ugly_plot
ugly_plot <- ggplot(data = space_dogs_summarized,
mapping = aes(x = Fate_binary, y = total_flights, color = Gender)) +
geom_col()+
theme_minimal() +
theme(
plot.background = element_rect(fill = "blue"),
panel.background = element_rect(fill = "red"),
axis.text.x = element_text(color = "white", size = 2),
axis.text.y = element_text(color = "green", size = 4),
axis.title = element_text(color = "black", size = 5),
legend.text = element_text(color = "purple", size = 4))
ugly_plot
# Enregistrez le tracé au format PNG avec ggsave()
final_ugly_plot <- base_plot +
ugly_plot
# Enregistrez le tracé au format PNG avec ggsave()
final_ugly_plot <- ugly_plot
# Enregistrer au format PNG et PDF
ggsave("fancy_gapminder.png", final_ugly_plot,
width = 8, height = 5, units = "in")
ggsave("fancy_gapminder.pdf", final_ugly_plot,
width = 8, height = 5, units = "in", device = cairo_pdf)
# Save the mpg plot as PNG and PDF
ggsave("fancy_mpg.png", ugly_example,
width = 8, height = 5, units = "in")
# Enregistrez le tracé au format PNG avec ggsave()
final_ugly_plot <-ugly_plot
# Enregistrer au format PNG et PDF
ggsave("fancy_gapminder.png", final_ugly_plot,
width = 8, height = 5, units = "in")
ggsave("fancy_gapminder.pdf", final_ugly_plot,
width = 8, height = 5, units = "in", device = cairo_pdf)
knitr::opts_chunk$set(fig.width = 6, fig.height = 3.6, fig.align = "center", collapse = TRUE)
set.seed(1234)
library(tidyverse)
library(lubridate)
library(ggridges)
install.packages("ggridges")
install.packages("gghalves")
library(tidyverse)
library(lubridate)
library(ggridges)
library(gghalves)
weather_atl_raw <- read_csv("data/atl-weather-2019.csv")
library(readr)
atl_weather_2019 <- read_csv("~/Automne 2023/visualisation de données/cours3/Exemple - Incertitude-20230918/data/atl-weather-2019.csv")
View(atl_weather_2019)
weather_atl_raw <- read_csv("data/atl-weather-2019.csv")
weather_atl_raw <- read_csv("atl-weather-2019.csv")
weather_atl_raw <- read_csv("data/atl-weather-2019.csv")
weather_atl_raw <- read_csv(here::here("static", "data", "atl-weather-2019.csv"))
